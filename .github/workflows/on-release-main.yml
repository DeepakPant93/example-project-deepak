name: deploy and publish pipeline

on:
    release:
        types: [published]
        branches: [main]

env:
    DOCKER_IMAGE: deepak93p/example_project_deepak # Replace with your DockerHub image
    AZURE_WEBAPP_NAME: example_project_deepak-app # Replace with your Azure Web App name

jobs:
    build-push-docker-image:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              env:
                  DOCKER_USER: deepak93p
                  DOCKER_PWD: ${{ secrets.DOCKERHUB_PUSH_TOKEN }}
              run: echo $DOCKER_PWD | docker login -u $DOCKER_USER --password-stdin

            - name: Build and Push Docker Image
              run: make docker-build-and-push IMAGE=${{ env.DOCKER_IMAGE }} TAG=${{ github.sha }}

            - name: Clean up Docker system
              run: docker system prune -f

    deploy:
        runs-on: ubuntu-latest
        needs: build-push-docker-image
        environment:
            name: "production"
            url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

        steps:
            - name: Azure Login
              uses: azure/login@v1
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v2
              with:
                  app-name: "${{ env.AZURE_WEBAPP_NAME }}"
                  slot-name: "production"
                  images: "index.docker.io/${{ env.DOCKER_IMAGE }}:${{ github.sha }}"

    publish-to-pypi:
        runs-on: ubuntu-latest
        steps:
            - name: Check out
              uses: actions/checkout@v4

            - name: Set up the environment
              uses: ./.github/actions/setup-poetry-env

            - name: Export tag
              id: vars
              run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

            - name: Build and publish
              run: |
                  source .venv/bin/activate
                  poetry version $RELEASE_VERSION
                  make build-and-publish
              env:
                  PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
                  RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
    deploy-docs:
        runs-on: ubuntu-latest
        steps:
            - name: Check out
              uses: actions/checkout@v4

            - name: Set up the environment
              uses: ./.github/actions/setup-poetry-env

            - name: Deploy documentation
              run: poetry run mkdocs gh-deploy --force
